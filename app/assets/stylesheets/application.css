/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

.react-rendered-component {
  display: contents;
}

nav .logo {
  font-size: 2rem;
  width: 100%;
}


main.course-editor .course-sections {
  display: grid;
  padding-bottom: 2rem;
  height: 100%;
  font-size: 1rem;
  line-height: 1.5;
  --line-height: 1.5rem;
}

main.course-editor .course-section {
  border: solid .0625rem rgb(var(--color)/var(--border-alpha));
  border-radius: .25rem;
  background-color: rgb(var(--filled));
  color: rgb(var(--contrast-filled));
  --active-bg: var(--body-bg);
  font-size: .875rem;
  line-height: 1.3;
  --line-height: 1.1375rem;
}

main.course-editor .course-section {
  display: grid;
  padding: 1rem;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
}

@media (min-width: 640px) {
  main.course-editor .course-section {
    grid-template-columns: minmax(30%,1fr) auto;
  }
}

main.course-editor .course-section>* {
  --color: var(--contrast-filled)
}

main.course-editor .course-section .content {
  display: flex;
  align-items: center;
  gap: .75rem;
}

main.course-editor .course-section .actions {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;
  gap: 0.5rem;
}

main.course-editor .course-section form > .input-group {
  gap: 1rem;
  padding: 2rem 0;
}

main.course-editor .course-section form > .input-group:first-of-type {
  padding-top: 0;
}

.section-type-icon {
  font-size: 1.5rem;
  line-height: 1.3;
  --line-height: 1.95rem;
}

.quill > * {
  font-size: 1rem !important;
}

.ql-toolbar.ql-snow {
  position: sticky;
  top: 0;
  background-color: rgb(var(--primary));
  color: rgb(var(--contrast-primary));
  --active-bg: var(--body-bg);
  display: flex;
  gap: 0.25rem;
  flex-wrap: wrap;
  padding: 0.5rem 0.25rem;
  z-index: 1;
  font-size: 1rem;
  line-height: 1.5;
  --line-height: 1.5rem;
  border: solid 0.0625rem rgb(var(--color)/var(--border-alpha)) !important;
  border-bottom: none;
  border-radius: 0.25rem 0.25rem 0 0;
}

.ql-toolbar > *,
.ql-container > * {
  --color: var(--contrast-primary);
}

.ql-toolbar button:hover {
  transform: none !important;
  box-shadow: none !important;
  background-color: rgb(var(--color)/0.1) !important;
}

.ql-toolbar button:hover .ql-stroke {
  stroke: rgb(var(--contrast-primary)) !important;
}

.ql-toolbar .ql-picker-label:hover,
.ql-toolbar .ql-picker-label.ql-active,
.ql-toolbar .ql-picker-options .ql-picker-item.ql-selected,
.ql-toolbar .ql-picker-options .ql-picker-item:hover {
  color: rgb(var(--contrast-primary)) !important;
}


.ql-container.ql-snow {
  border-top: none;
  border: solid 0.0625rem rgb(var(--color)/var(--border-alpha)) !important;
  border-radius: 0 0 0.25rem 0.25rem;
  min-height: 80px;
}